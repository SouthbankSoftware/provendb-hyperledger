# SPDX-License-Identifier: Apache-2.0
version: "2.4"

volumes:
  pgdata:
  walletstore:

networks:
  test.com:
    external:
      name: net_test

# networks:
#   test:

services:
  explorerdb.test:
    image: hyperledger/explorer-db:latest
    container_name: explorerdb.test
    hostname: explorerdb.test
    environment:
      - DATABASE_DATABASE=fabricexplorer
      - DATABASE_USERNAME=hppoc
      - DATABASE_PASSWORD=password
    healthcheck:
      test: "pg_isready -h localhost -p 5432 -q -U postgres"
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - test.com

  explorer.test:
    image: hyperledger/explorer:latest
    container_name: explorer.test
    hostname: explorer.test
    restart: always
    environment:
      - DATABASE_HOST=explorerdb.test
      - DATABASE_DATABASE=fabricexplorer
      - DATABASE_USERNAME=hppoc
      - DATABASE_PASSWD=password
      - LOG_LEVEL_APP=debug
      - LOG_LEVEL_DB=debug
      - LOG_LEVEL_CONSOLE=info
      - LOG_CONSOLE_STDOUT=true
      - DISCOVERY_AS_LOCALHOST=false
    volumes:
      - ./config.json:/opt/explorer/app/platform/fabric/config.json
      - ../connection-profile:/opt/explorer/app/platform/fabric/connection-profile
      - ../organizations:/tmp/crypto
      - walletstore:/opt/wallet
    # The below can be improved:
    # The sleep command is to make sure that the peer, orderer is up and the channel is created
    # The mv commands are because the key names get overwritten once the start-fabrc.sh is run
    # The node and tail commands are as is
    command: sh -c "sleep 30 &&
      mv /tmp/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/*_sk /tmp/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/priv_sk 2>/dev/null  || true &&
      mv /tmp/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/*.pem /tmp/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/cert.pem 2>/dev/null || true &&
      node /opt/explorer/main.js &&
      tail -f /dev/null"
    ports:
      - 8080:8080
    depends_on:
      explorerdb.test:
        condition: service_healthy
    healthcheck:
      test: "wget --quiet --tries=1 --spider http://localhost:8080 || exit 1"
      interval: 30s
      timeout: 5s
      retries: 10
    networks:
      - test.com
